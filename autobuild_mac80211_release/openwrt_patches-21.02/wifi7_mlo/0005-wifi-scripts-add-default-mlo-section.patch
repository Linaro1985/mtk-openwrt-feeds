diff --git a/package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh b/package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh
index c21aa9d..6a8f37e 100755
--- a/package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh
+++ b/package/network/config/wifi-scripts/files/lib/netifd/wireless/mac80211.sh
@@ -715,6 +715,10 @@ mac80211_generate_mac() {
 	local phy="$1"
 	local id="${macidx:-0}"
 
+	if [ "$phy" = "mld" ]; then
+		id=60;
+		phy=phy0;
+	fi
 	wdev_tool "$phy" get_macaddr id=$id num_global=$num_global_macaddr mbssid=${multiple_bssid:-0}
 }
 
@@ -846,6 +850,12 @@ fill_mld_params() {
 		echo "mld_id $target_mld_id is not found"
 		return 1
 	fi
+
+	if [ $target_mld_id -lt 1 ] || [ $target_mld_id -gt 16 ]; then
+		echo "mld_id is out of range (1, 16)"
+		return 1
+	fi
+
 	return 0
 }
 
@@ -857,7 +867,28 @@ mac80211_prepare_vif() {
 
 		json_get_vars mld_addr
 		if [ -z "$mld_addr" ]; then
-			json_add_string mld_addr "$(mac80211_generate_mac phy0)"
+			generated_mac=$(mac80211_generate_mac mld)
+			# Split the MAC address to get the last byte
+			b6="${generated_mac##*:}"
+
+			# Convert the last byte to a decimal for arithmetic operations
+			b6_dec=$((0x$b6))
+
+			# Get the lower four bits (last digit in hexadecimal representation)
+			lower_nibble=$(($b6_dec & 0x0F))
+
+			# Rotate the lower four bits based on mld_id
+			# Modulus by 16 ensures that the rotation stays within the bounds of a nibble (4 bits)
+			rotated=$(( (lower_nibble + $mld_id - 1) & 0x0F ))
+
+			# Combine the upper four bits with the rotated lower four bits
+			b6_rotated=$(($b6_dec & 0xF0 | rotated))
+
+			# Reassemble the MAC address
+			result_mac="${generated_mac%:*}:$(printf '%02X' $b6_rotated)"
+
+			# Add the MAC address to the JSON object
+			json_add_string mld_addr "$result_mac"
 		fi
 	fi
 
diff --git a/package/network/config/wifi-scripts/files/lib/wifi/mac80211.sh b/package/network/config/wifi-scripts/files/lib/wifi/mac80211.sh
index d8a1756..be8c049 100644
--- a/package/network/config/wifi-scripts/files/lib/wifi/mac80211.sh
+++ b/package/network/config/wifi-scripts/files/lib/wifi/mac80211.sh
@@ -148,7 +148,6 @@ get_band_defaults() {
 			sae_pwe=2
 			ieee80211w=2
 			channel=37
-			mbssid=1
 			mbo=1
 			band_idx=2
 		elif [ "$band" = "5g" ]
@@ -169,6 +168,17 @@ get_band_defaults() {
 	done
 }
 
+get_mld_defaults() {
+	mld_section=ap_mld_1
+	mld_id=1
+	mld_encryption=sae
+	mld_key=12345678
+	mld_sae_pwe=2
+	mld_ieee80211w=2
+	mld_ssid=MT76_AP_MLD
+	mld_ifname=ap-mld-1
+}
+
 check_devidx() {
 	case "$1" in
 	radio[0-9]*)
@@ -195,6 +205,7 @@ check_board_phy() {
 detect_mac80211() {
 	devidx=0
 	disabled=0
+	init_mld=0
 	config_load wireless
 	config_foreach check_devidx wifi-device
 
@@ -229,6 +240,17 @@ detect_mac80211() {
 
 		get_band_defaults "$dev"
 
+
+		mld_section=""
+		mld_id=""
+		mld_encryption=""
+		mld_key=""
+		mld_sae_pwe=""
+		mld_ieee80211w=""
+		mld_ssid=""
+		mld_ifname=""
+		get_mld_defaults
+
 		path="$(iwinfo nl80211 path "$dev")"
 		macaddr="$(cat /sys/class/ieee80211/${dev}/macaddress)"
 
@@ -244,6 +266,7 @@ detect_mac80211() {
 		found=
 		config_foreach check_mac80211_device wifi-device "$path" "$macaddr"
 		[ -n "$found" ] && continue
+		init_mld=1
 
 		name="radio${devidx}"
 		devidx=$(($devidx + 1))
@@ -300,6 +323,13 @@ EOF
 			uci -q set wireless.${name}.band_idx=${band_idx}
 		}
 
+		uci -q batch <<-EOF
+			set wireless.default_${name}_mld=wifi-iface
+			set wireless.default_${name}_mld.device=${name}
+			set wireless.default_${name}_mld.network=lan
+			set wireless.default_${name}_mld.mode=ap
+			set wireless.default_${name}_mld.mld_id=${mld_id}
+EOF
 		uci -q batch <<-EOF
 			set wireless.default_${name}=wifi-iface
 			set wireless.default_${name}.device=${name}
@@ -326,6 +356,38 @@ EOF
 		[ -n "$mbo" ] && {
 			uci -q set wireless.default_${name}.mbo=${mbo}
 		}
-		uci -q commit wireless
 	done
+
+	if [ -n "$init_mld" ]; then
+		devidx=$(($devidx + 1))
+
+		uci -q set wireless.${mld_section}=wifi-mld
+		uci -q set wireless.${mld_section}.ifname=${mld_ifname}
+		uci -q set wireless.${mld_section}.mld_id=${mld_id}
+		uci -q set wireless.${mld_section}.ssid=${mld_ssid}
+		uci -q set wireless.${mld_section}.encryption=${mld_encryption}
+
+		[ -n "$mld_key" ] && {
+			uci -q set wireless.${mld_section}.key=${mld_key}
+		}
+		[ -n "$mld_sae_pwe" ] && {
+			uci -q set wireless.${mld_section}.sae_pwe=${mld_sae_pwe}
+		}
+		[ -n "$mld_ieee80211w" ] && {
+			uci -q set wireless.${mld_section}.ieee80211w=${mld_ieee80211w}
+		}
+
+		macaddr=""
+		if (dmesg | grep -q "eeprom load fail"); then
+			for i in $(seq 2 3); do
+				macaddr=${macaddr}:$(echo $rand | cut -d ' ' -f $i)
+			done
+			macaddr="00:0$(($devidx + 1)):55:66${macaddr}"
+		fi
+		[ -n "$macaddr" ] && {
+			uci -q set wireless.${mld_section}.mld_addr=$macaddr
+		}
+	fi
+
+	uci -q commit wireless
 }


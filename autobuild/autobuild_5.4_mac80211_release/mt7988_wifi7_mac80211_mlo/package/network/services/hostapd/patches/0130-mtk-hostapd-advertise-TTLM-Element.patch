From 12e793c2ad878410471dddf09bc1dd99ed2b8ebd Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Wed, 3 Jul 2024 15:37:12 +0800
Subject: [PATCH 130/137] mtk: hostapd: advertise TTLM Element

This commit make link(s) to advertise TTLM if there is currlently valid
one.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/beacon.c              |  4 +++
 src/ap/ieee802_11.c          |  1 +
 src/ap/ieee802_11.h          |  1 +
 src/ap/ieee802_11_eht.c      | 66 ++++++++++++++++++++++++++++++++++++
 src/common/ieee802_11_defs.h | 13 +++++++
 5 files changed, 85 insertions(+)

diff --git a/src/ap/beacon.c b/src/ap/beacon.c
index 5293ee4c1..a5a885213 100644
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -943,6 +943,9 @@ static u8 * hostapd_probe_resp_fill_elems(struct hostapd_data *hapd,
 
 		pos = hostapd_eid_eht_capab(hapd, pos, IEEE80211_MODE_AP);
 		pos = hostapd_eid_eht_operation(hapd, pos);
+
+		if (!params->is_ml_sta_info)
+			pos = hostapd_eid_eht_attlm(hapd, pos);
 	}
 #endif /* CONFIG_IEEE80211BE */
 
@@ -2536,6 +2539,7 @@ int ieee802_11_build_ap_params(struct hostapd_data *hapd,
 		tailpos = hostapd_eid_eht_capab(hapd, tailpos,
 						IEEE80211_MODE_AP);
 		tailpos = hostapd_eid_eht_operation(hapd, tailpos);
+		tailpos = hostapd_eid_eht_attlm(hapd, tailpos);
 	}
 #endif /* CONFIG_IEEE80211BE */
 
diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 2861c09d7..3e9fb8ce1 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -5088,6 +5088,7 @@ rsnxe_done:
 			p = hostapd_eid_eht_ml_assoc(hapd, sta, p);
 		p = hostapd_eid_eht_capab(hapd, p, IEEE80211_MODE_AP);
 		p = hostapd_eid_eht_operation(hapd, p);
+		p = hostapd_eid_eht_attlm(hapd, p);
 	}
 #endif /* CONFIG_IEEE80211BE */
 
diff --git a/src/ap/ieee802_11.h b/src/ap/ieee802_11.h
index 40301bce9..efaa20c86 100644
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -243,6 +243,7 @@ u8 * hostapd_eid_eht_capab(struct hostapd_data *hapd, u8 *eid,
 			   enum ieee80211_op_mode opmode);
 u8 * hostapd_eid_non_inheritance(struct hostapd_data *hapd, u8 *eid);
 u8 * hostapd_eid_eht_operation(struct hostapd_data *hapd, u8 *eid);
+u8 * hostapd_eid_eht_attlm(struct hostapd_data *hapd, u8 *eid);
 u16 copy_sta_eht_capab(struct hostapd_data *hapd, struct sta_info *sta,
 		       enum ieee80211_op_mode opmode,
 		       const u8 *he_capab, size_t he_capab_len,
diff --git a/src/ap/ieee802_11_eht.c b/src/ap/ieee802_11_eht.c
index cad0d8437..261225bae 100644
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -824,6 +824,72 @@ static u8 * hostapd_eid_eht_reconf_ml(struct hostapd_data *hapd, u8 *eid)
 }
 
 
+u8 * hostapd_eid_eht_attlm(struct hostapd_data *hapd, u8 *eid)
+{
+	struct attlm_settings *attlm;
+	struct os_reltime now, res;
+	int i;
+	u16 control = 0;
+	u8 *pos = eid;
+	u16 enabled_links;
+
+	if (!hapd->conf->mld_ap)
+		return eid;
+
+	attlm = &hapd->mld->new_attlm;
+	if (!attlm || !attlm->valid)
+		return eid;
+
+	/* The length will be set at the end */
+	*pos++ = WLAN_EID_EXTENSION;
+	*pos++ = 0;
+	*pos++ = WLAN_EID_EXT_TID_TO_LINK_MAPPING;
+
+	/* Set the A-TTLM Control field */
+	control = (IEEE80211_TTLM_CONTROL_DIRECTION & attlm->direction) |
+		  IEEE80211_TTLM_CONTROL_EXPECTED_DUR_PRESENT |
+		  IEEE80211_TTLM_CONTROL_INDICATOR;
+
+	if (attlm->switch_time_tsf_tu != 0)
+		control |= IEEE80211_TTLM_CONTROL_SWITCH_TIME_PRESENT;
+
+	WPA_PUT_LE16(pos, control);
+	pos += 2;
+
+	/* switch time & expected duration */
+	if (attlm->switch_time_tsf_tu != 0) {
+		WPA_PUT_LE16(pos, attlm->switch_time_tsf_tu);
+		pos += 2;
+
+		WPA_PUT_LE24(pos, (attlm->duration * 1000) >> 10);
+		pos += 3;
+	} else {
+		u32 diff;
+
+		os_get_reltime(&now);
+		os_reltime_sub(&now, &attlm->start_time, &res);
+		diff = (u32)os_reltime_in_ms(&res);
+
+		if (attlm->duration <= diff)
+			return eid;
+
+		WPA_PUT_LE24(pos, ((attlm->duration - diff) * 1000) >> 10);
+		pos += 3;
+	}
+
+	/* Link Mapping of each TID (0 - 7) */
+	enabled_links = hapd->conf->mld_allowed_links & ~attlm->disabled_links;
+	for (i = 0; i < 8; i++) {
+		WPA_PUT_LE16(pos, enabled_links);
+		pos += 2;
+	}
+
+	eid[1] = pos - eid - 2;
+
+	return pos;
+}
+
+
 static size_t hostapd_eid_eht_ml_len(struct mld_info *info,
 				     bool include_mld_id,
 				     u8 eml_disable)
diff --git a/src/common/ieee802_11_defs.h b/src/common/ieee802_11_defs.h
index d93fa6660..afcc2f861 100644
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -2912,6 +2912,19 @@ enum ieee80211_eht_ml_sub_elem {
 	EHT_ML_SUB_ELEM_FRAGMENT = 254,
 };
 
+/* IEEE P802.11be/D5.0, 9.4.2.314 - TID-to-Link Mapping control */
+#define IEEE80211_TTLM_CONTROL_DIRECTION		0x0003
+#define IEEE80211_TTLM_CONTROL_DEF_LINK_MAP		0x0004
+#define IEEE80211_TTLM_CONTROL_SWITCH_TIME_PRESENT	0x0008
+#define IEEE80211_TTLM_CONTROL_EXPECTED_DUR_PRESENT	0x0010
+#define IEEE80211_TTLM_CONTROL_LINK_MAP_SIZE		0x0020
+#define IEEE80211_TTLM_CONTROL_INDICATOR		0xff00
+
+/* TTLM direction */
+#define IEEE80211_TTLM_DIRECTION_DOWN		0
+#define IEEE80211_TTLM_DIRECTION_UP		1
+#define IEEE80211_TTLM_DIRECTION_BOTH		2
+
 /* IEEE P802.11ay/D4.0, 9.4.2.251 - EDMG Operation element */
 #define EDMG_BSS_OPERATING_CHANNELS_OFFSET	6
 #define EDMG_OPERATING_CHANNEL_WIDTH_OFFSET	7
-- 
2.18.0

